{"version":3,"sources":["webpack:///./src/phaser-js/lvl2.js"],"names":["resText","timedEvent","timeTimer","closedAllCounter","closedBadCounter","missCounter","bonusCounter","fin","status","time","delayValue","EndScene","key","this","load","image","add","setOrigin","text","font","fill","fontStyle","Scene","InfoScene","gameWidth","sys","game","canvas","width","gameHeight","height","info","setDisplaySize","startBtn","setInteractive","on","scene","start","GoodBadWinsScene","addEvent","delay","callback","drawWins","callbackScope","loop","timerLoop","getProgress","setText","toString","setTimeout","Math","random","drawGood","drawBad","randomPosX","floor","randomPosY","goodWin","closeBtn","destroy","missClick","countBonus","remove","badWin","launch","containerId","Phaser","Game","type","AUTO","parent","physics","arcade","debug"],"mappings":"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","file":"js/chunk-2d0c55a9.db853419.js","sourcesContent":["import Phaser from 'phaser';\r\n\r\nimport { Scene } from 'phaser';\r\n\r\nlet closedAllCounter = 0;\r\nlet closedBadCounter = 0;\r\nlet missCounter = 0;\r\nlet bonusCounter = 0;\r\n\r\nlet fin = false;\r\nlet status = '';\r\n\r\nlet resText; // info string for user\r\n\r\nlet timedEvent; // time event for drawing windows\r\nlet time = 30; // timer time\r\nlet timeTimer; // time event for timer\r\n\r\nlet delayValue = 700;\r\n\r\nclass EndScene extends Scene{\r\n  constructor(){\r\n    super({ key: 'EndScene'})\r\n  }\r\n  preload(){\r\n    this.load.image('bg', '../assets/lvl2/bg.png');\r\n  }\r\n  create(){\r\n    this.add.image(0,0,'bg').setOrigin(0);\r\n    //let gameWidth = this.sys.game.canvas.width;\r\n\r\n    if ((closedBadCounter/missCounter > 30/6 && closedBadCounter > 10) || bonusCounter > 4){\r\n      status = 'success';\r\n    } else{\r\n      this.add.text(0, 0, `Кажется, ты особо одарённый:\r\n${closedBadCounter} успешно закрытых кликбейтов к ${missCounter} промахам я давно не видел`,\r\n      { font: '20px Courier', fill: '#000000', fontStyle: 'bold' } ).setOrigin(0);\r\n      status = 'unsuccess';\r\n    }\r\n    fin = true;\r\n  }\r\n}\r\n\r\n\r\nclass InfoScene extends Scene{\r\n\r\n  constructor(){\r\n    super({ key: 'InfoScene'})\r\n  }\r\n\r\n  preload(){\r\n    this.load.image('closeBtn', '../assets/lvl2/close_btn.png');\r\n    this.load.image('startBtn', '../assets/lvl2/start_btn.png');\r\n    this.load.image('bg', '../assets/lvl2/bg.png');\r\n    this.load.image('info', '../assets/lvl2/GreetingBG.png')\r\n  }\r\n\r\n  create(){\r\n    fin = false;\r\n    this.add.image(0,0,'bg').setOrigin(0);\r\n    let gameWidth = this.sys.game.canvas.width;\r\n    let gameHeight = this.sys.game.canvas.height;\r\n    let info = this.add.image(0,0,'info').setOrigin(0,0);\r\n    info.setDisplaySize(gameWidth, gameHeight);\r\n\r\n\r\n    let startBtn = this.add.image(gameWidth/2 - (gameWidth*0.4/2), gameHeight - gameHeight*0.1, 'startBtn').setOrigin(0).setInteractive();\r\n    startBtn.setDisplaySize(gameWidth*0.4, gameHeight*0.1);\r\n\r\n    startBtn.on('pointerup', function(){\r\n      this.scene.start('GoodBadWinsScene');\r\n    }, this)\r\n  }\r\n}\r\n\r\nclass GoodBadWinsScene extends Scene {\r\n    constructor () {\r\n        super({ key: 'GoodBadWinsScene' })\r\n    }\r\n\r\n    preload () {\r\n        closedAllCounter = 0;\r\n        closedBadCounter = 0;\r\n        missCounter = 0;\r\n        time = 30;\r\n        bonusCounter = 0;\r\n\r\n        this.load.image('closeBtn', '../assets/lvl2/close_btn.png');\r\n        this.load.image('badWin', '../assets/lvl2/bad_win.png');\r\n        this.load.image('goodWin', '../assets/lvl2/good_win.png');\r\n        this.load.image('bg', '../assets/lvl2/bg.png');\r\n    }\r\n  \r\n    create () {\r\n      this.add.image(0,0,'bg').setOrigin(0);\r\n      let gameHeight = this.sys.game.canvas.height;\r\n      timedEvent = this.time.addEvent({ delay: delayValue, callback: this.drawWins, callbackScope: this, loop: true });\r\n      timeTimer = this.time.addEvent({\r\n        delay: 1000,                // ms\r\n        callback: this.timerLoop,\r\n        loop: true\r\n      });\r\n      resText = this.add.text(gameHeight*.01,gameHeight*.01, '', { font: '16px Courier', fill: '#000000', fontStyle: 'bold' }).setOrigin(0);\r\n    }\r\n\r\n    update (){\r\n        let gameHeight = this.sys.game.canvas.height;\r\n        let gameWidth = this.sys.game.canvas.width;\r\n        timedEvent.getProgress();\r\n        resText.setText('Времени осталось: ' + time + ' Одолел: ' + closedBadCounter.toString()+ ' Ошибок: ' + missCounter.toString() + ' Cобрал бонусов: ' + bonusCounter.toString());\r\n        if (time <= 0){\r\n          this.add.text(gameWidth/2,gameHeight/2, 'Время закончилось', { font: '50px Courier', fill: '#ebac0c', fontStyle: 'bold' }).setOrigin(0.5, 0.5);\r\n          setTimeout(() => {\r\n            this.scene.start('EndScene')\r\n          }, 2000);\r\n        }\r\n    }\r\n\r\n    drawWins(){\r\n      if (Math.random()>0.85){\r\n        this.drawGood();\r\n      }else{\r\n        this.drawBad();\r\n      }\r\n    }\r\n\r\n    drawGood(){\r\n      let gameHeight = this.sys.game.canvas.height;\r\n      let gameWidth = this.sys.game.canvas.width;\r\n    \r\n      let randomPosX = Math.floor(Math.random()*(gameWidth-gameWidth*.3));\r\n      let randomPosY = Math.floor(Math.random()*(gameHeight-gameHeight*.3-gameHeight*.1) + gameHeight*.1);\r\n    \r\n      let goodWin = this.add.image(randomPosX,randomPosY,'goodWin').setOrigin(0).setInteractive();\r\n      let closeBtn = this.add.image(randomPosX,randomPosY,'closeBtn').setOrigin(0).setInteractive();\r\n    \r\n      goodWin.setDisplaySize(gameWidth*.3, gameHeight*.3);\r\n      closeBtn.setDisplaySize(gameWidth*.03,gameWidth*.03);\r\n    \r\n      closeBtn.on('pointerup', function(){\r\n          goodWin.destroy();\r\n          closeBtn.destroy();\r\n          this.missClick();\r\n      }, this);\r\n\r\n      goodWin.on('pointerup', function(){\r\n        this.countBonus();\r\n        goodWin.destroy();\r\n        closeBtn.destroy();\r\n      }, this);\r\n\r\n      closedAllCounter++;\r\n      if (closedAllCounter >= 100){\r\n        timedEvent.remove(false);\r\n      }\r\n    }\r\n\r\n    drawBad(){\r\n      let gameHeight = this.sys.game.canvas.height;\r\n      let gameWidth = this.sys.game.canvas.width;\r\n    \r\n      let randomPosX = Math.floor(Math.random()*(gameWidth-gameWidth*.3));\r\n      let randomPosY = Math.floor(Math.random()*(gameHeight-gameHeight*.3-gameHeight*.1) + gameHeight*.1);\r\n    \r\n      let badWin = this.add.image(randomPosX,randomPosY,'badWin').setOrigin(0).setInteractive();\r\n      let closeBtn = this.add.image(randomPosX,randomPosY,'closeBtn').setOrigin(0).setInteractive();\r\n    \r\n      badWin.setDisplaySize(gameWidth*.3, gameHeight*.3);\r\n      closeBtn.setDisplaySize(gameWidth*.03,gameWidth*.03);\r\n    \r\n      closeBtn.on('pointerup', function(){\r\n          badWin.destroy();\r\n          closeBtn.destroy();\r\n          closedBadCounter++;\r\n      }, this);\r\n\r\n      badWin.on('pointerup', function(){\r\n        this.missClick();\r\n      }, this);\r\n\r\n      closedAllCounter++;\r\n      if (closedAllCounter >= 100){\r\n        timedEvent.remove(false);\r\n      }\r\n    }\r\n\r\n    missClick(){\r\n      missCounter++;\r\n    }\r\n\r\n    countBonus(){\r\n      bonusCounter++;\r\n    }\r\n\r\n    timerLoop(){\r\n      --time;\r\n      if (time <= 0){\r\n        timedEvent.remove(false);\r\n        timeTimer.remove(false);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\nfunction launch(containerId) {\r\n  return new Phaser.Game({\r\n    type: Phaser.AUTO,\r\n    width: 900,\r\n    height: 600,\r\n    parent: containerId,\r\n    physics: {\r\n      arcade: {\r\n        debug: false\r\n      }\r\n    },\r\n    scene: [InfoScene, GoodBadWinsScene, EndScene]\r\n  })\r\n}\r\n\r\nexport default launch\r\nexport { launch, fin, status }"],"sourceRoot":""}